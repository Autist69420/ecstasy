image: "debian:stretch-slim"

stages:
  - prepare
  - build
  - publish

variables:
  RUSTUP_HOME: "$CI_PROJECT_DIR/.rustup"
  CARGO_HOME: "$CI_PROJECT_DIR/.cargo"

.write_cache:
  cache:
    key: "$CI_COMMIT_REF_SLUG-rustup"
    paths:
      - .rustup
      - .cargo

.read_cache:
  cache:
    key: "$CI_COMMIT_REF_SLUG-rustup"
    paths:
      - .rustup
      - .cargo
    policy: pull

.toolchain-stable:
  extends: .read_cache
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends ca-certificates libssl-dev libc6-dev pkg-config gcc
    - export PATH="$CARGO_HOME/bin:$PATH"
    - rustup default stable

.toolchain-nightly:
  extends: .read_cache
  allow_failure: true
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends ca-certificates libssl-dev libc6-dev pkg-config gcc
    - export PATH="$CARGO_HOME/bin:$PATH"
    - rustup default nightly

####### Jobs #######

install-rust:
  extends: .write_cache
  stage: prepare
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends ca-certificates curl
    - curl --location --output /usr/local/bin/release-cli "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/packages/generic/release-cli/latest/release-cli-darwin-amd64"
    - sudo chmod +x /usr/local/bin/release-cli
    - curl https://sh.rustup.rs > rustup.sh
    - sh rustup.sh -y --default-host x86_64-unknown-linux-gnu
    - export PATH="$CARGO_HOME/bin:$PATH"
    - rustup install ${RUST_STABLE_VERSION:-stable}
    - rustup install nightly
  only:
    changes:
      - Cargo.toml
      - Cargo.lock
      - src/**/*.rs

build-stable:
  extends: .toolchain-stable
  stage: build
  script:
    - echo BUILD_JOB_ID=$CI_JOB_ID >> builder.env
    - cargo build
  artifacts:
    paths:
      - target/release/kyanite
    reports:
      dotenv: builder.env
  only:
    changes:
      - Cargo.toml
      - Cargo.lock
      - src/**/*.rs
      - .gitlab-ci.yml

build-nightly:
  extends: .toolchain-nightly
  stage: build
  script:
    - cargo build
  only:
    changes:
      - Cargo.toml
      - Cargo.lock
      - src/**/*.rs

deploy-crates-io:
  extends: .toolchain-stable
  stage: publish
  script:
    - cargo publish --token "$CRATES_IO_API_TOKEN"
  only:
    - tags@lu-ci/kyanite

deploy-gitlab:
  extends: build-stable
  stage: publish
  needs:
    - job: build-stable
      artifacts: true
  release:
    name: "Release Executable $CI_COMMIT_SHORT_SHA"
    description: "Automated LINUX executable release for Kyanite."
    tag_name: "$CI_COMMIT_SHORT_SHA"
    assets:
      links:
        - name: 'Linux Executable'
          url: '${CI_PROJECT_URL}/-/jobs/${BUILD_JOB_ID}/artifacts/file/dist/cloudwatch-linux'
  only:
    - tags@lu-ci/kyanite