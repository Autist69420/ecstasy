image: "rust:latest"

stages:
  - "test"
  - "build"
  - "publish"

# Prepare
.prepare_stable:
  #  stage: "prepare"
  script:
    - echo 'Running stable preparation...'
    - rustup update
  cache:
    - key:
        files:
          - "Cargo.lock"
      paths:
        - target

.prepare_nightly:
  #  stage: "prepare"
  script:
    - echo 'Running nightly preparation...'
    - rustup install nightly
    - rustup default nightly
  cache:
    - key:
        files:
          - "Cargo.lock"
      paths:
        - target

# Test

## Check
check_stable:
  stage: "test"
  extends: .prepare_stable
  script:
    - echo 'Running stable checks...'
    - cargo check

check_nightly:
  stage: "test"
  extends: .prepare_nightly
  script:
    - echo 'Running nightly checks...'
    - cargo check

## Test
test_stable:
  stage: "test"
  extends: ".prepare_stable"
  needs:
    - "check_stable"
  script:
    - echo 'Running stable tests...'
    - cargo test

test_nightly:
  stage: "test"
  extends: ".prepare_nightly"
  needs:
    - "check_nightly"
  script:
    - echo 'Running nightly tests...'
    - cargo test

## Clippy
clippy_stable:
  stage: "test"
  extends: ".prepare_stable"
  needs:
    - "test_stable"
  script:
    - echo 'Running stable clippy...'
    - rustup component add clippy-preview
    - cargo clippy
  allow_failure: true

clippy_nightly:
  stage: "test"
  extends: ".prepare_nightly"
  needs:
    - "test_nightly"
  script:
    - echo 'Running nightly clippy...'
    - rustup component add clippy-preview
    - cargo clippy
  allow_failure: true

# Build
build_stable:
  stage: "build"
  extends: ".prepare_stable"
  needs:
    - "test_stable"
  script:
    - echo 'Building stable release...'
    - cargo build --release
  artifacts:
    paths:
      - "target/release/kyanite"

build_nightly:
  stage: "build"
  extends: ".prepare_nightly"
  needs:
    - "test_nightly"
  script:
    - echo 'Building nightly release...'
    - cargo build --release

# Publish
crates_io:
  stage: "publish"
  needs:
    - "build_stable"
  script:
    - echo 'Publishing to crates.io...'
    - cargo publish --token "$CRATES_IO_API_TOKEN"
  only:
    - tags@lu-ci/kyanite
