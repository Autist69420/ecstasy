image: "rust:latest"

stages:
  - "base"
  - "prepare"
  - "test"
  - "build"
  - "publish"

# Prepare
base:
  stage: "base"
  script:
    - curl --location --output /usr/local/bin/release-cli "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/packages/generic/release-cli/latest/release-cli-darwin-amd64"
    - chmod +x /usr/local/bin/release-cli

prepare_stable:
  stage: "prepare"
  needs:
    - "base"
  script:
    - echo 'Running stable preparation stage...'
    - rustup update
    - rustup default
    - rustup component add clippy-preview

prepare_nightly:
  stage: "prepare"
  needs:
    - "base"
  script:
    - echo 'Running nightly preparation stage...'
    - rustup install nightly
    - rustup default nightly
    - rustup default
    - rustup component add clippy-preview

# Test

## Check
check_stable:
  stage: "test"
  needs:
    - "prepare_stable"
  script:
    - echo 'Running stable checks...'
    - cargo check

check_nightly:
  stage: "test"
  needs:
    - "prepare_nightly"
  script:
    - echo 'Running nightly checks...'
    - cargo check

## Test
test_stable:
  stage: "test"
  needs:
    - "check_stable"
  script:
    - echo 'Running stable tests...'
    - cargo test

test_nightly:
  stage: "test"
  needs:
    - "check_nightly"
  script:
    - echo 'Running nightly tests...'
    - cargo test

## Clippy
clippy_stable:
  stage: "test"
  needs:
    - "test_stable"
  script:
    - echo 'Running stable clippy...'
    - cargo clippy
  allow_failure: true

clippy_nightly:
  stage: "test"
  needs:
    - "test_nightly"
  script:
    - echo 'Running nightly clippy...'
    - cargo clippy
  allow_failure: true

# Build
build_stable:
  stage: "build"
  needs:
    - "test_stable"
  script:
    - echo 'Building stable release...'
    - cargo build --release
  artifacts:
    paths:
      - "target/release/kyanite"

build_nightly:
  stage: "build"
  needs:
    - "test_nightly"
  script:
    - echo 'Building nightly release...'
    - cargo build --release

# Publish
crates_io:
  stage: "publish"
  needs:
    - "build_stable"
  script:
    - echo 'Publishing to crates.io...'
    - cargo publish --token "$CRATES_IO_API_TOKEN"
  only:
    - tags@lu-ci/kyanite

gitlab:
  stage: "publish"
  needs:
    - job: "build_stable"
      artifacts: true
  script:
    - echo 'Publishing to GitLab...'
  release:
    name: "Kyanite $CI_COMMIT_SHORT_SHA"
    description: "Automated LINUX executable release for Kyanite."
    tag_name: "$CI_COMMIT_SHORT_SHA"
    assets:
      links:
        - name: 'Linux Executable'
          url: '${CI_PROJECT_URL}/-/jobs/${BUILD_JOB_ID}/artifacts/file/dist/kyanite'
